basePath: /api
definitions:
  models.ArticleRequest:
    properties:
      category:
        example: Hombre
        type: string
      sub_title:
        example: Subtitle
        type: string
      title:
        example: Title
        type: string
    required:
    - category
    - sub_title
    - title
    type: object
  models.Articles:
    properties:
      category:
        type: string
      date_article:
        type: string
      identifier:
        type: string
      image_article:
        type: string
      image_sub_title:
        type: string
      sub_title:
        type: string
      title:
        type: string
    required:
    - category
    - identifier
    - sub_title
    - title
    type: object
  models.Auth:
    properties:
      email:
        example: user@users.com
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - password
    type: object
  models.AuthResponse:
    properties:
      email:
        type: string
      identifier:
        type: string
      name:
        type: string
      token:
        type: string
    type: object
  models.Facebook:
    properties:
      email:
        type: string
      name:
        type: string
      token:
        type: string
    required:
    - email
    - name
    type: object
  models.HTTPResponse:
    properties:
      code:
        example: 400
        type: integer
      error:
        type: boolean
      message:
        example: status bad request
        type: string
    type: object
  models.Image:
    properties:
      image:
        type: string
    type: object
  models.Religion:
    properties:
      identifier:
        type: string
      name:
        type: string
    required:
    - identifier
    - name
    type: object
  models.ReligionRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.SexualOrientation:
    properties:
      identifier:
        type: string
      name:
        type: string
    required:
    - identifier
    - name
    type: object
  models.SexualOrientationRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.UsersRequest:
    properties:
      active:
        type: boolean
      age:
        type: integer
      email:
        example: pepe@gmail.com
        type: string
      id_religion:
        type: string
      name:
        example: Pepe Gonzalez
        type: string
      password:
        type: string
      sex:
        example: Masculino
        type: string
      sexual_orientation:
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8081
info:
  contact:
    email: omar26begue@gmail.com
    name: Omar Isalgu√© Begue
  description: API Rest Sexualidad.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API Rest Sexualidad - Knowdo Studio.
  version: 1.0.0
paths:
  /auth/facebook:
    post:
      consumes:
      - application/json
      description: Login email.
      parameters:
      - description: Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.Facebook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      summary: Login email
      tags:
      - Authentication
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login email.
      parameters:
      - description: Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.Auth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      summary: Login email
      tags:
      - Authentication
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registration via email.
      parameters:
      - description: Register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/models.UsersRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      summary: Registration via email
      tags:
      - Authentication
  /images/articles/subtitle/{id}/photo:
    get:
      consumes:
      - application/json
      description: Download photo server
      parameters:
      - description: Article
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      summary: Download photo server
      tags:
      - Images
  /religions:
    get:
      consumes:
      - application/json
      description: Returns all religions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Religion'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      summary: Returns all religions
      tags:
      - Religions
    post:
      consumes:
      - application/json
      description: Returns all religions.
      parameters:
      - description: Religion
        in: body
        name: religion
        required: true
        schema:
          $ref: '#/definitions/models.ReligionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Religion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns all religions
      tags:
      - Religions
  /religions/{id}:
    delete:
      consumes:
      - application/json
      description: Returns all religions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Religion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns all religions
      tags:
      - Religions
    patch:
      consumes:
      - application/json
      description: Returns all religions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Religion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns all religions
      tags:
      - Religions
  /sexual:
    get:
      consumes:
      - application/json
      description: Returns all religions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.SexualOrientation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      summary: Returns all religions
      tags:
      - Sexual Orientation
    post:
      consumes:
      - application/json
      description: Returns all religions.
      parameters:
      - description: Sexual Orientation
        in: body
        name: sexual
        required: true
        schema:
          $ref: '#/definitions/models.SexualOrientationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SexualOrientation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns all religions
      tags:
      - Sexual Orientation
  /sexual/{id}:
    delete:
      consumes:
      - application/json
      description: Returns all religions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Religion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns all religions
      tags:
      - Sexual Orientation
    patch:
      consumes:
      - application/json
      description: Returns all religions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Religion'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns all religions
      tags:
      - Sexual Orientation
  /v1/articles:
    get:
      consumes:
      - application/json
      description: Returns a list of items.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Articles'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns a list of items
      tags:
      - Articles
    post:
      consumes:
      - application/json
      description: Create article.
      parameters:
      - description: Article
        in: body
        name: religion
        required: true
        schema:
          $ref: '#/definitions/models.ArticleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Articles'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Create article
      tags:
      - Articles
  /v1/articles/subtitle/{id}/upload:
    post:
      consumes:
      - application/json
      description: Upload an image to the server. The supported extensions are [png,
        jpeg]
      parameters:
      - description: Article
        in: path
        name: id
        required: true
        type: string
      - description: Image Subtitle
        in: formData
        name: subtitle
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.HTTPResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.HTTPResponse'
      security:
      - ApiKeyAuth: []
      summary: Upload an image to the server
      tags:
      - Articles
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
